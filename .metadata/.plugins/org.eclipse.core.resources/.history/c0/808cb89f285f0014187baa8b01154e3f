package au.edu.jcu.it.numbergame.gameactivity;

import java.util.ArrayList;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Point;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import au.edu.jcu.it.numbergame.R;

public class Card extends Fragment {

	int width;
	int height;
	int textSize;
	boolean selected = false;
	MyView myView;
	
	ArrayList<Integer> cardNumbers;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		
		Display display = this.getActivity().getWindowManager().getDefaultDisplay();
		Point size = new Point();
		display.getSize(size);
		width = size.x;
		height = size.y;
		textSize = this.getActivity().getApplicationContext().getResources()
						.getDimensionPixelSize(R.dimen.custom_text_size);
		myView = new MyView(this.getActivity());
		
		return myView;
	}
	
	// import array of numbers that will appear on card
	// checks gamemode mode and highlights cards with correct
	// number on it.
	public void setNumbers(ArrayList<Integer> cardNumbers) {
		this.cardNumbers = cardNumbers;
		if (GameActivity.computerSecretNumber != 0) {
			if (isNumberOnCard()) {
				selected = true;
			}
		}
	}
	
	// Highlights card and returns the first number
	public int selectCard() {
		if (selected == true) {
			selected = false;
			myView.invalidate();
			return this.cardNumbers.get(0) * -1;
		}
		selected = true;
		myView.invalidate();
		return this.cardNumbers.get(0);
	}
	
	// checks if number is on card
	private boolean isNumberOnCard() {
		for (int i = 0; i < cardNumbers.size(); i++) {
			if (cardNumbers.get(i) == GameActivity.computerSecretNumber) {
				return true;
			}
		}
		return false;
	}
	
	private class MyView extends View {

		private Paint paint;
		
		public MyView(Context context) {
			super(context);
			paint = new Paint();
			invalidate();
		}
		
		protected void onDraw(Canvas canvas) {
			super.onDraw(canvas);
			
			if (selected == true) {
				paint.setColor(Color.GREEN);
			} else {
				paint.setColor(Color.BLACK);
			}
			paint.setStrokeWidth(10);
			canvas.drawLine(50, 120, (width - 50), 120, paint);
			canvas.drawLine(50, 120, 50, (height - 130), paint);
			canvas.drawLine(50, (height - 130), (width - 50), (height - 130), paint);
			canvas.drawLine((width - 50), 120, (width - 50), (height - 130), paint);
			
			paint.setColor(Color.BLACK);
			paint.setAlpha(180);
			canvas.drawRect(50, 120, (width - 50), (height - 130), paint);
			paint.setAlpha(255);
			
			paint.setColor(Color.WHITE);
			paint.setTextSize(textSize);
			int xPosition = 90;
			int yPosition = 240;
			for (int i = 0; i < cardNumbers.size(); i++) {
				canvas.drawText("" + cardNumbers.get(i), xPosition, yPosition, paint);
				xPosition += textSize*1.5;
				if (xPosition > width - 160) {
					xPosition = 90;
					yPosition += textSize*1.5;
				}
			}
		}
	}
}
